Finding the length of a loop in linked list

#include<iostream>
using namespace std;
class node
{
  public:
  int data;
  node* next;
};
node* head=NULL;
class Linkedlist
{
public:
    void insertnode(int value)
    {
        node* new_node=new node();
        new_node->data=value;

        if(head==NULL)
        head=new_node;

        else
        {
            new_node->next=head;
            head=new_node;
        }
    }

    void createloop()
    {
        node* temp=head;
        while(temp->next!=NULL)
        {
            temp=temp->next;
        }
        temp->next=head;
    }
    int countlength(node *n)  
    {  
        int counter = 1;  
        node *temp = n;  
        while (temp->next != n)  
        {  
            counter++;  
            temp = temp->next;  
        }  
        return counter;  
    }  
    int detectloop()
    {
        node* slow=head;
        node* fast=head;
        while(slow && fast && fast->next)
        {
            slow=slow->next;
            fast=fast->next->next;
            if(slow==fast)
            {
                return countlength(slow); 
            }

        }

        return 0;
    }
 };
int main()
{
    Linkedlist obj;

//insert nodes in linkedlist
obj.insertnode(1);
obj.insertnode(2);
obj.insertnode(3);
obj.insertnode(4);
obj.insertnode(5);
obj.insertnode(6);


//create loop for testing
obj.createloop(); 

// detect loop
int ans=obj.detectloop();
cout<<"The length of the loop is "<<ans<<endl;

//point the head to null to create a new list
head=NULL;

//insert the nodes in list
obj.insertnode(9);
obj.insertnode(10);
obj.insertnode(11);
obj.insertnode(12);
obj.insertnode(13);

//detect if there is a loop
int ans1=obj.detectloop();
cout<<"The length of the loop is "<<ans1<<endl;

}
